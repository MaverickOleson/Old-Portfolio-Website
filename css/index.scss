@use 'sass:math';
@use 'sass:list';
$fullWidth: 100%;
/*@media screen and (orientation:landscape) {
    @media screen and (min-width: 1920px) {
        html{
            font-size: 16px;
        }
    }
    @media screen and (max-width: 1919px) {
        html{
            font-size: 15px;
        }
    }
    @media screen and (max-width: 1328px) {
        html{
            font-size: 14px;
        }
    }
}
@media screen and (orientation:portrait) {
    @media screen and (max-height: 1366px) {
        html{
            font-size: 19px;
        }
    }
    @media screen and (max-height: 1366px) {
        html{
            font-size: 19px;
        }
    }
}*/
$headerHeight: 17.8vh;
$navHeight: $headerHeight / 4.3 * 4;
$panelWidth: $navHeight / 4.3 * 4;
$panelHeight: $panelWidth * math.sin(60deg);
@mixin flexRow {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
}
*{
    margin: 0;
    color: white;
    text-align: center;
    body{
        background: linear-gradient(to right, darkviolet, blue, darkviolet);
        header{
            background-color: black;
            width: $fullWidth;
            min-height: $headerHeight;
            @include flexRow();
            justify-content: center;
            align-items: center;
            box-sizing: border-box;
            border: 1.15vh double cyan;
            nav{
                width: $panelWidth;
                height: $navHeight;
                position: fixed;
                top: 0;
                left: 0;
                $navMargin: ($headerHeight - $panelHeight) / 2;
                margin: {
                    top: $navMargin - 1.6vh;
                    left: $navMargin;
                }
                .tetrahedron{
                    width: $panelWidth;
                    height: $panelHeight;
                    $panelTranslateZ: -1 * math.tan(30deg) * $panelWidth / 2;
                    $panelRotateX: math.acos(math.tan(30deg) / 2 / (math.tan(60deg) / 2)) - 90;
                    transform-style: preserve-3d;
                    //transform-origin: center;
                    div{
                        width: $panelWidth;
                        height: $panelHeight;
                        background-color: salmon;
                        clip-path: polygon(50% 0, 100% 100%, 0 100%);
                        position: absolute;
                        overflow-y: auto;
                        display: flex;
                        justify-content: center;
                        align-items: center;
                        backface-visibility: hidden;
                        *{
                            font-size: 2.4vh;
                            background-color: transparent;
                        }
                        a{
                            margin-top: 25%;
                        }
                    }
                    .div1{
                        transform-origin: bottom;
                        transform: translateZ($panelTranslateZ) rotateX($panelRotateX);
                    }
                    .div2{
                        transform-origin: bottom;
                        transform: rotateY(-120deg) translateZ($panelTranslateZ) rotateX($panelRotateX);
                    }
                    .div3{
                        transform-origin: bottom;
                        transform: rotateY(120deg) translateZ($panelTranslateZ) rotateX($panelRotateX);
                    }
                    $spins: ();
                    @for $i from 0 to 3{
                        $spins: append($spins, ($i * 120deg, ($i + 1) * 120deg));
                        $spins: append($spins, ($i * 120deg, ($i - 1) * 120deg));
                    }
                    @for $i from 1 to 7{
                        @keyframes spin#{$i}{
                            0% {transform: rotateY(list.nth(list.nth($spins, $i), 1))}
                            100% {transform: rotateY(list.nth(list.nth($spins, $i), 2))}
                        }
                    }
                }
                .dotDiv{
                    width: $panelWidth;
                    height: 2.8vh;
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    .dot {
                        cursor: pointer;
                        height: 1.9vh;
                        width: 1.9vh;
                        background-color: #ffffff;
                        margin: {
                            right: 8px;
                            left: 8px;
                        }
                        border-radius: 100%;
                        transition: background-color 0.6s ease;
                    }
                    .active {
                        background-color: #616161;
                    }   
                }
                  
            }
            .title{
                text-decoration: underline 0.3vh;
                border: 1.2vh solid lime;
                background-color: black;
                border-radius: 11vh;
                padding: {
                    left: 2.4%;
                    right: 2.4%;
                }
                margin: {
                    top : 1vh;
                    bottom : 1vh;
                }
            }
        }
        main{
            width: $fullWidth;
            .row{
                width: $fullWidth;
                @media screen and (orientation:landscape) {
                    height: 82.2vh;
                }
                @media screen and (orientation:portrait) {
                    height: 164.4vh;
                }
                @include flexRow();
                align-items: center;
                justify-content: space-evenly;
                .textBox{
                    @media screen and (orientation:landscape) {
                        width: 45%;
                        height: 95%;
                    }
                    @media screen and (orientation:portrait) {
                        width: 84%;
                        height: 45%;
                    }
                    overflow-y: auto;
                    box-sizing: border-box;
                    background-color: black;
                    border: 1.15vh double fuchsia;
                    box-shadow: rgba(240, 46, 170, 0.4) -0.5vmin 0.5vmin, rgba(240, 46, 170, 0.3) -1vmin 1vmin, rgba(240, 46, 170, 0.2) -1.5vmin 1.5vmin, rgba(240, 46, 170, 0.1) -2vmin 2vmin, rgba(240, 46, 170, 0.05) -2.5vmin 2.5vmin;
                    p{
                        margin: {
                            right: 0.5vw;
                            left: 0.5vw;
                        }
                    }
                }
                img{
                    @media screen and (orientation:landscape) {
                        height: 95%;
                    }
                    @media screen and (orientation:portrait) {
                        height: 45%;
                    }
                    box-shadow: rgba(0, 240, 0, 0.4) -0.5vmin 0.5vmin, rgba(0, 240, 0, 0.3) -1vmin 1vmin, rgba(0, 240, 0, 0.2) -1.5vmin 1.5vmin, rgba(0, 240, 0, 0.1) -2vmin 2vmin, rgba(0, 240, 0, 0.05) -2.5vmin 2.5vmin;
                }
                #image1{
                    box-sizing: border-box;
                    border: 1.15vh double lime;
                    border-radius: 16% 16% 12% 12%;
                }
                #image2{
                    box-sizing: border-box;
                    border: 1.15vh double lime;
                    border-radius: 16% 16% 12% 12%;
                }
            }
            hr{
                padding-top: 2px;
                background-color: cyan;
                border: none;
            }
        }
        footer{
            background-color: black;
            width: $fullWidth;
            min-height: 11.5vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
            box-sizing: border-box;
            border: 1.15vh double gold;
        }
    }
}
/*
@import 'partials/nav1';
@media (orientation: landscape) {
    @import 'partials/nav2';
}
nav{
    img{
        height: auto;
    }
}
footer{
    background-color: blue;
    color: white;
}*/
/*
Resources for animation test:

#div1{
    background-color: red;
    width: 200px;
    height: 200px;
    position: absolute;
    top: 0;
}
#div2{
    background-color: blue;
    width: 200px;
    height: 200px;
    position: absolute;
    bottom: 0;
}
#p1{
    z-index: 1;
}
#p-place{
    margin: 0;
    visibility: hidden;
}*/